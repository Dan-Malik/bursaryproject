{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Chi Zhang\\\\Desktop\\\\QA Bursary project\\\\AWS-Bursary-Project-V1\\\\React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Chi Zhang\\\\Desktop\\\\QA Bursary project\\\\AWS-Bursary-Project-V1\\\\React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Chi Zhang\\\\Desktop\\\\QA Bursary project\\\\AWS-Bursary-Project-V1\\\\React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Chi Zhang\\\\Desktop\\\\QA Bursary project\\\\AWS-Bursary-Project-V1\\\\React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Chi Zhang\\\\Desktop\\\\QA Bursary project\\\\AWS-Bursary-Project-V1\\\\React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Chi Zhang\\\\Desktop\\\\QA Bursary project\\\\AWS-Bursary-Project-V1\\\\React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Chi Zhang\\\\Desktop\\\\QA Bursary project\\\\AWS-Bursary-Project-V1\\\\React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Chi Zhang\\\\Desktop\\\\QA Bursary project\\\\AWS-Bursary-Project-V1\\\\React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Chi Zhang\\\\Desktop\\\\QA Bursary project\\\\AWS-Bursary-Project-V1\\\\React\\\\src\\\\components\\\\change-password-staff.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport CryptoJS from \"react-native-crypto-js\";\nimport { codes } from \"../secrets/secrets.js\";\nimport '../css/changePasswordTrainee.css';\n\nvar ChangePasswordStaff =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChangePasswordStaff, _Component);\n\n  function ChangePasswordStaff(props) {\n    var _this;\n\n    _classCallCheck(this, ChangePasswordStaff);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChangePasswordStaff).call(this, props));\n    _this.onChangeUserPassword = _this.onChangeUserPassword.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChangeConfirmPassword = _this.onChangeConfirmPassword.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      id: '',\n      email: '',\n      password: '',\n      error: true\n    };\n    return _this;\n  }\n\n  _createClass(ChangePasswordStaff, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get('http://' + process.env.REACT_APP_AWS_IP + ':4000/admin/reset-staff/' + this.props.match.params.token).then(function (response) {\n                  console.log(response.data.message);\n\n                  if (response.data.message === 'password reset link a-ok') {\n                    _this2.setState({\n                      id: response.data.staff_id,\n                      error: false\n                    });\n                  }\n                }).catch(function (error) {\n                  console.log(error.response.data);\n\n                  _this2.setState({\n                    error: true\n                  });\n                });\n\n              case 2:\n                axios.get('http://' + process.env.REACT_APP_AWS_IP + ':4000/admin/staff/' + this.state.id).then(function (response) {\n                  var email = CryptoJS.AES.decrypt(response.data.email, codes.staff, {\n                    iv: codes.iv\n                  });\n                  var password = CryptoJS.AES.decrypt(response.data.password, codes.staffPass);\n\n                  _this2.setState({\n                    email: email.toString(CryptoJS.enc.Utf8),\n                    password: password.toString(CryptoJS.enc.Utf8)\n                  });\n                }).catch(function (error) {\n                  console.log(error);\n\n                  _this2.setState({\n                    error: true\n                  });\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"onChangeUserPassword\",\n    value: function onChangeUserPassword(e) {\n      this.setState({\n        password: e.target.value\n      });\n    }\n  }, {\n    key: \"onChangeConfirmPassword\",\n    value: function onChangeConfirmPassword(e) {\n      this.setState({\n        confirmPassword: e.target.value\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      var _this3 = this;\n\n      e.preventDefault();\n      var _this$state = this.state,\n          password = _this$state.password,\n          confirmPassword = _this$state.confirmPassword;\n\n      if (password !== confirmPassword) {\n        alert(\"Password does not match\");\n      } else {\n        var pass = CryptoJS.AES.encrypt(this.state.password, codes.staffPass);\n        var obj = {\n          password: pass.toString()\n        };\n        console.log(obj);\n        axios.post('http://' + process.env.REACT_APP_AWS_IP + ':4000/admin/update-password-staff/' + this.props.match.params.token, obj).then(function (res) {\n          console.log(res.data);\n\n          _this3.props.history.push('/');\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          password = _this$state2.password,\n          error = _this$state2.error;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, \"Problem resetting password. Link is invalid or expired\"));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"changePassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"changeForm\",\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Update Password\"), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Email: \"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        readOnly: true,\n        value: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"New Password: \"), React.createElement(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        onChange: this.onChangeUserPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Confirm Password: \"), React.createElement(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        onChange: this.onChangeConfirmPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Update Password\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ChangePasswordStaff;\n}(Component);\n\nexport { ChangePasswordStaff as default };","map":{"version":3,"sources":["C:\\Users\\Chi Zhang\\Desktop\\QA Bursary project\\AWS-Bursary-Project-V1\\React\\src\\components\\change-password-staff.component.js"],"names":["React","Component","axios","CryptoJS","codes","ChangePasswordStaff","props","onChangeUserPassword","bind","onChangeConfirmPassword","onSubmit","state","id","email","password","error","get","process","env","REACT_APP_AWS_IP","match","params","token","then","response","console","log","data","message","setState","staff_id","catch","AES","decrypt","staff","iv","staffPass","toString","enc","Utf8","e","target","value","confirmPassword","preventDefault","alert","pass","encrypt","obj","post","res","history","push"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport CryptoJS from \"react-native-crypto-js\";\r\nimport { codes } from \"../secrets/secrets.js\";\r\nimport '../css/changePasswordTrainee.css';\r\n\r\nexport default class ChangePasswordStaff extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\t\t\r\n        this.onChangeUserPassword = this.onChangeUserPassword.bind(this);\r\n        this.onChangeConfirmPassword = this.onChangeConfirmPassword.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            id:'',\r\n            email: '',\r\n            password: '',\r\n            error: true\r\n        }\r\n    }\r\n    \r\n    async componentDidMount() {\r\n        await axios.get('http://'+process.env.REACT_APP_AWS_IP+':4000/admin/reset-staff/'+this.props.match.params.token)\r\n            .then(response => {\r\n                    console.log(response.data.message);\r\n                    if (response.data.message === 'password reset link a-ok') {\r\n                        this.setState({\r\n                            id: response.data.staff_id,\r\n                            error: false\r\n                        })\r\n                    }\r\n            })\r\n            .catch((error) => {\r\n                    console.log(error.response.data);\r\n                    this.setState({\r\n                        error: true\r\n                    });\r\n            })\r\n        axios.get('http://'+process.env.REACT_APP_AWS_IP+':4000/admin/staff/'+this.state.id)\r\n            .then(response => {\r\n                var email  = CryptoJS.AES.decrypt(response.data.email, codes.staff, {iv: codes.iv});\r\n                var password  = CryptoJS.AES.decrypt(response.data.password, codes.staffPass);\r\n                this.setState({\r\n                    email: email.toString(CryptoJS.enc.Utf8),\r\n                    password: password.toString(CryptoJS.enc.Utf8),\r\n                })   \r\n            })\r\n            .catch((error) => {\r\n                    console.log(error);\r\n                    this.setState({\r\n                        error: true\r\n                    });\r\n            })\r\n    }\r\n    \r\n    onChangeUserPassword(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n\t\r\n\tonChangeConfirmPassword(e) {\r\n\t\tthis.setState({\r\n\t\t\tconfirmPassword: e.target.value,\r\n\t\t});\r\n\t}\r\n    \r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\t\tconst {password, confirmPassword} = this.state;\r\n\t\tif (password !== confirmPassword){\r\n            alert(\"Password does not match\");\r\n\t\t} \r\n        else {\r\n            var pass = CryptoJS.AES.encrypt(this.state.password, codes.staffPass);\r\n            const obj = {\r\n                password: pass.toString()\r\n            };\r\n            console.log(obj);\r\n            axios.post('http://'+process.env.REACT_APP_AWS_IP+':4000/admin/update-password-staff/'+this.props.match.params.token, obj)\r\n            .then(res => {console.log(res.data);\r\n                          this.props.history.push('/');\r\n                         });\r\n        \r\n       }\r\n    }\r\n    \r\n    render() {\r\n        \r\n        const {password, error} = this.state;\r\n        if (error) {\r\n            return (\r\n                <div>\r\n                    <h3>Problem resetting password. Link is invalid or expired</h3>\r\n\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <div className=\"changePassword\">\r\n                <form className=\"changeForm\" onSubmit={this.onSubmit}>\r\n                    <h3 align=\"center\">Update Password</h3>\r\n                    <div className=\"form-group\">\r\n                        <label>Email: </label>\r\n                        <input type=\"text\" \r\n                               className=\"form-control\"\r\n                               readOnly value={this.state.email}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\"> \r\n                        <label>New Password: </label>\r\n                        <input type=\"password\"\r\n                               className=\"form-control\"\r\n                               onChange={this.onChangeUserPassword}\r\n                        />\r\n                    </div>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t   <label>Confirm Password: </label>\r\n\t\t\t\t\t   <input type =\"password\"\r\n\t\t\t\t\t\t      className=\"form-control\"\r\n\t\t\t\t\t\t      onChange={this.onChangeConfirmPassword}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n                    <br />\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Update Password\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}