{"ast":null,"code":"import { authService } from './authService';\nexport function handleResponse(response) {\n  return response.text().then(function (text) {\n    var data = text && JSON.parse(text);\n\n    if (!response.ok) {\n      if ([401, 403].indexOf(response.status) !== -1) {\n        authService.logout();\n        window.location.hostname.reload(true);\n      } // auto logout if a 401 or 403 Foribidden response\n\n\n      var error = data && data.message || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}","map":{"version":3,"sources":["C:\\Users\\Chi Zhang\\Desktop\\QA Bursary project\\AWS-Bursary-Project-V1\\React\\src\\components\\modules\\handle-response.js"],"names":["authService","handleResponse","response","text","then","data","JSON","parse","ok","indexOf","status","logout","window","location","hostname","reload","error","message","statusText","Promise","reject"],"mappings":"AAAA,SAASA,WAAT,QAA4B,eAA5B;AAEA,OAAO,SAASC,cAAT,CAAyBC,QAAzB,EAAmC;AACzC,SAAOA,QAAQ,CAACC,IAAT,GAAgBC,IAAhB,CAAsB,UAAAD,IAAI,EAAI;AACrC,QAAME,IAAI,GAAGF,IAAI,IAAIG,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAArB;;AACA,QAAI,CAACD,QAAQ,CAACM,EAAd,EAAiB;AAChB,UAAI,CAAC,GAAD,EAAM,GAAN,EAAWC,OAAX,CAAmBP,QAAQ,CAACQ,MAA5B,MAAwC,CAAC,CAA7C,EAA+C;AAC/CV,QAAAA,WAAW,CAACW,MAAZ;AACAC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,MAAzB,CAAgC,IAAhC;AACC,OAJe,CAKhB;;;AACA,UAAMC,KAAK,GAAIX,IAAI,IAAIA,IAAI,CAACY,OAAd,IAA0Bf,QAAQ,CAACgB,UAAjD;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACC;;AACD,WAAOX,IAAP;AACA,GAZM,CAAP;AAaA","sourcesContent":["import { authService } from './authService';\r\n\r\nexport function handleResponse (response) {\r\n\treturn response.text().then( text => {\r\n\tconst data = text && JSON.parse(text);\r\n\tif (!response.ok){\r\n\t\tif ([401, 403].indexOf(response.status) !== -1){\r\n\t\tauthService.logout();\r\n\t\twindow.location.hostname.reload(true);\r\n\t\t}\r\n\t\t// auto logout if a 401 or 403 Foribidden response\r\n\t\tconst error = (data && data.message) || response.statusText;\r\n\t\treturn Promise.reject(error);\r\n\t\t}\r\n\t\treturn data; \r\n\t});\r\n}"]},"metadata":{},"sourceType":"module"}